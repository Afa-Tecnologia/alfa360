services:
  # Servidor Nginx como proxy reverso
  nginx:
    image: nginx:alpine
    container_name: alfamanager_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./data/logs/nginx:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - alfamanager_network
    restart: always

  # Frontend Next.js
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
    container_name: alfamanager_frontend
    volumes:
      - ./frontend/public:/app/public
    environment:
      - NODE_ENV=production
    networks:
      - alfamanager_network
    restart: always

  # Backend Laravel
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: alfamanager_backend
    volumes:
      - ./backend:/var/www/html
      - ./data/uploads:/var/www/html/storage/app/public
    environment:
      - APP_ENV=${APP_ENV}
      - APP_KEY=${APP_KEY}
      - APP_DEBUG=${APP_DEBUG}
      - APP_URL=${APP_URL}
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=6379
      - JWT_SECRET=${JWT_SECRET}
      - JWT_BLACKLIST_ENABLED=${JWT_BLACKLIST_ENABLED}
    depends_on:
      - mysql
      - redis
    networks:
      - alfamanager_network
    restart: always

  # Banco de Dados MySQL
  mysql:
    image: mysql:8.0
    container_name: alfamanager_mysql
    volumes:
      - ./data/mysql:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    ports:
      - "3306:3306"
    networks:
      - alfamanager_network
    restart: always
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p${MYSQL_ROOT_PASSWORD}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis para cache e filas
  redis:
    image: redis:alpine
    container_name: alfamanager_redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - ./data/redis:/data
    ports:
      - "6379:6379"
    networks:
      - alfamanager_network
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  alfamanager_network:
    driver: bridge
